@model FrontEnd.Models.EmpleadoViewModel

@{
    ViewBag.Title = "Crear empleado";
}

<h2>Crear</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4>Nuevo empleado</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.idPersona, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                
                @Html.DropDownListFor(model => model.idPersona, new SelectList(Model.empleados, "idPersona", "numeroIdentificacion"), "--Select--")
                @Html.ValidationMessageFor(model => model.idPersona, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.departamento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.departamento, new SelectList(Model.departamentos, "idParametro", "descripcion"), "--Select--")
                @Html.ValidationMessageFor(model => model.departamento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.puesto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.puesto, new SelectList(Model.puestos, "idParametro", "descripcion"), "--Select--")
                @Html.ValidationMessageFor(model => model.puesto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.salarioMensual, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.salarioMensual, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.salarioMensual, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.portacionArma, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.portacionArma, new SelectList(Model.portacionArmas, "idParametro", "descripcion"), "--Select--")
                @Html.ValidationMessageFor(model => model.portacionArma, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.vencimientoPermisoArma, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.vencimientoPermisoArma, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.vencimientoPermisoArma, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.numeroCuentaBancaria, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.numeroCuentaBancaria, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.numeroCuentaBancaria, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Crear" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

    <div>
        @Html.ActionLink("Regresar a la Lista", "Index", "Index", new { @class = "btn btn-default" })
    </div>
@if (TempData["mensaje"] != null)
{
    <script type="text/javascript">
        window.onload = function () {
            alert("@TempData["mensaje"]")
        };
    </script>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

@model FrontEnd.Models.ParametroViewModel

@{
    ViewBag.Title = "Crear parámetro";
}

<h2>Crear</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Nuevo parámetro</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.tabla, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.tabla, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.tabla, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.campo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.campo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.campo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.descripcion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.descripcion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Crear" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

    <div>
        @Html.ActionLink("Regresar a la Lista", "Index", "Index", new { @class = "btn btn-default" })
    </div>
@if (TempData["mensaje"] != null)
{
    <script type="text/javascript">
        window.onload = function () {
            alert("@TempData["mensaje"]")
        };
    </script>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
